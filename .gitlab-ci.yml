image: docker:latest

services:
  - name: docker:dind
    alias: localhost
  
before_script:
  - chmod +x ./gradlew
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - $GRADLE_USER_HOME/caches/
    - $GRADLE_USER_HOME/wrapper/
    - $GRADLE_USER_HOME/build-cache/    

variables:
  DOCKER_HOST: tcp://docker:2375

stages:
  - build
  - package
  - deploy

gradle-build:
  image: gradle:alpine
  stage: build
  script: 
    - echo "Gradle build starts"
    - gradle clean && gradle build
    - echo "Gradle build finished"
  artifacts:
    paths:
      - build/libs/*.jar

docker-build:
  stage: package
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://localhost:2375/
  image: cr.yandex/yc/metadata-token-docker-helper:0.2
  services:
    - docker:19.03.1-dind
  script:
    - echo "Package starting..."
    - mkdir image
    - cr.yandex/crpoatffns8a7vbcrg9j/hello:gitlab-$CI_COMMIT_SHORT_SHA
    - docker build . -t cr.yandex/crpoatffns8a7vbcrg9j/tgservice
    - docker push cr.yandex/crpoatffns8a7vbcrg9j/tgservice
  
deploy:
  image: gcr.io/cloud-builders/kubectl:latest
  stage: deploy
  script:
    - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=admin
    - kubectl config use-context default
    - sed -i "s/__VERSION__/gitlab-$CI_COMMIT_SHORT_SHA/" k8s.yaml
    - kubectl apply -f k8s.yaml
  
