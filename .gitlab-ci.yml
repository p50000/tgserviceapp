image: docker:latest

services:
  - name: docker:dind
    alias: localhost
  
before_script:
  - chmod +x ./gradlew
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - $GRADLE_USER_HOME/caches/
    - $GRADLE_USER_HOME/wrapper/
    - $GRADLE_USER_HOME/build-cache/    


stages:
  - build
  - package
  - deploy

gradle-build:
  image: gradle:alpine
  stage: build
  script: 
    - ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
    - echo "Gradle build starts"
    - gradle clean && gradle build
    - echo "Gradle build finished"
  artifacts:
    paths:
      - build/libs/*.jar

docker-build:
  stage: package
  script:
    - echo "Package starting..."
    - mkdir image
    - docker build --build-arg JAR_FILE=build.gradle/libs/\*.jar -t tgservice .
    - docker save tgservice > image/tgservice.tar
  artifacts:
      paths:
        - image
deploy:
  stage: deploy
  script:
    - docker load -i image/tgservice.tar
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker tag tgservice tgservice:latest
    - echo "Deploy starting..."
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - images = $(docker ps -q)
  
